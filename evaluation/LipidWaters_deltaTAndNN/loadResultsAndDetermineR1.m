function relevantResults = loadResultsAndDetermineR1(filePath,omega0 ...
    ,dipolDipolConstant)
if strcmp(filePath,"")
    error("Matfile name not found. ");
end
results = load(filePath);
deltaTInS = results.deltaTInS;
for fieldName = fieldnames(results.sumCorrelationFunctionSaverFirstOrder)'
    corrFuncFirstOrder = results ...
        .sumCorrelationFunctionSaverFirstOrder.(fieldName{1}) ...
        /results.atomCounter;
    corrFuncSecondOrder = results ...
        .sumCorrelationFunctionSaverSecondOrder.(fieldName{1}) ...
        /results.atomCounter;
    
    for thetaNr = 1:size(corrFuncFirstOrder,1)
        for phiNr = 1:size(corrFuncFirstOrder,2)
            [specDensFirstOrder,specDensSecondOrder] = ...
                calculateSpectralDensities( ...
                squeeze(corrFuncFirstOrder(thetaNr,phiNr,:))' ...
                ,squeeze(corrFuncSecondOrder(thetaNr,phiNr,:))',omega0 ...
                ,deltaTInS,results.lags);
            
            r1_theta_phi.(fieldName{1})(thetaNr,phiNr) = ...
                calculateR1WithSpectralDensity(specDensFirstOrder ...
                ,specDensSecondOrder,dipolDipolConstant);
        end
    end
    
    allCorrFuncsZerothOrder.(fieldName{1}) = results ...
        .sumCorrelationFunctionsSaverZerothOrder.(fieldName{1}) ...
        /results.atomCounter;
    allCorrFuncsFirstOrder.(fieldName{1}) = corrFuncFirstOrder;
    allCorrFuncsSecondOrder.(fieldName{1}) = corrFuncSecondOrder;
end

relevantResults = struct( ...
    'deltaT', deltaTInS ...
    ,'simulationDuration', results.simulationDurationInS ...
    ,'corrFuncZerothOrder', allCorrFuncsZerothOrder...
    ,'corrFuncFirstOrder' , allCorrFuncsFirstOrder ...
    ,'corrFuncSecondOrder', allCorrFuncsSecondOrder ...
    ,'r1_theta_phi', r1_theta_phi ...
    ,'fibreAnglesTheta', rad2deg(results.fibreAnglesTheta) ...
    ,'fibreAnglesPhi', rad2deg(results.fibreAnglesPhi) ...
    ,'nearestNeighbourCases', results.nearestNeighbourCases ...
    ,'gromacsFileName', results.fileName);

end